/**************************************************************************/
/*                                                                        */
/*  Copyright (C) 2014-2019                                               */
/*    CEA (Commissariat a l'Energie Atomique et aux Energies              */
/*         Alternatives)                                                  */
/*                                                                        */
/*  you can redistribute it and/or modify it under the terms of the GNU   */
/*  Lesser General Public License as published by the Free Software       */
/*  Foundation, version 2.1.                                              */
/*                                                                        */
/*  It is distributed in the hope that it will be useful,                 */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of        */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         */
/*  GNU Lesser General Public License for more details.                   */
/*                                                                        */
/*  See the GNU Lesser General Public License version 2.1                 */
/*  for more details (enclosed in the file LICENSE).                      */
/*                                                                        */
/**************************************************************************/

/////////////////////////////////
//
// Library   : Collection
// Unit      : Abstract collections
// File      : ELMCollection.incfoot
// Description :
//   Footer file to manage the relations between the arguments
//   of the files ELMCollection.inch and ELMCollection.incc.
//

/************************************************************************************/
/* The arguments to provide:                                                        */
/* DefCursor:                       Cursor or collection                            */
/* DefJustDeclare:                  Just declare the methods                        */
/* DefJustInline:                   Define the methods                              */
/* DefTypeElement:                  Type of the elements; if not defined for the    */
/*                                  cursors, the operations are not available       */
/* DefTypeCollection:               Type of the collections                         */
/* DefTypeCastToCollectHandler:     Cast method Element -> EnhancedObject           */
/* DefTypeCCastToCollectHandler:    Method const Element -> const EnhancedObject    */
/* DefTypeCastFromCollectHandler:   Cast method EnhancedObject -> Element           */
/* DefTypeCCastFromCollectHandler:  Method const EnhancedObject -> const Element    */
/* DefTypeInheritedCollection:      Inherited collection                            */
/*          if provided, the defined methods call the inherited methods             */
/*          if not provided, the defined methods call the protected methods         */
/* DefTypeCursor:                   Type of the cursors                             */
/* DefTypeSorted:                   Sorted collection if defined                    */
/* DefTypeMultiSorted:              Multi-sorted collection if defined              */
/* DefTypeKey:                      Collection with a key not in the element        */
/* DefTypeControlKey:               Type of the key returned by our collection      */
/* DefBaseMultipleInterface:        Only add the management of specific elements    */
/* DefImplementsNativeMethods:      If defined calls the specialized methods        */
/*                                  by the type of element                          */
/* DefTypeFinal:                    Call the final protected methods of ...         */
/* DefTemplate:                     Template definition for the inline methods      */
/* DefExcludeElement:               If defined no element is inserted               */
/* DefMapInterface:                 If defined add the map methods                  */
/************************************************************************************/

#ifdef HasDefTypeElement
   #undef DefTypeElement
   #undef HasDefTypeElement
#endif
#ifdef HasDefTemplate
   #undef DefTemplate
   #undef HasDefTemplate
#endif
#undef DefTypename
#ifdef HasDefTypeCastToCollectHandler
   #undef DefTypeCastToCollectHandler
   #undef HasDefTypeCastToCollectHandler
#endif
#ifdef HasDefTypeCCastToCollectHandler
   #undef DefTypeCCastToCollectHandler
   #undef HasDefTypeCCastToCollectHandler
#endif
#ifdef HasDefTypeCastFromCollectHandler
   #undef DefTypeCastFromCollectHandler
   #undef HasDefTypeCastFromCollectHandler
#endif
#ifdef HasDefTypeCCastFromCollectHandler
   #undef DefTypeCCastFromCollectHandler
   #undef HasDefTypeCCastFromCollectHandler
#endif
#ifdef HasDefTypeCursor
   #undef DefTypeCursor
   #undef HasDefTypeCursor
#endif
#ifdef HasDefTypeCollection
   #undef DefTypeCollection
   #undef HasDefTypeCollection
#endif
#ifdef HasDefTypeFinal
   #undef DefTypeFinal
   #undef HasDefTypeFinal
#endif
/*
#ifdef HasDefTypeTemplate
   #undef DefTypeTemplate
   #undef HasDefTypeTemplate
#endif
*/
#ifdef HasDefTypeControlKey
   #undef DefTypeControlKey
   #undef HasDefTypeControlKey
#endif

